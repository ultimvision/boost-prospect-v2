{
  "active": true,
  "connections": {
    "Variables - Set": {
      "main": [
        [
          {
            "node": "Vault",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Receive Apollo Lead Request - HTTP": {
      "main": [
        [
          {
            "node": "Variables - Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Prospecting URL Present - IF": {
      "main": [
        [
          {
            "node": "Generate Task Suffix - Util",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Handle Missing Prospecting URL - Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Actor Task - Apify": {
      "main": [
        [
          {
            "node": "Prepare Task ID and Auth Header - Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Idempotency Key - Util": {
      "main": [
        [
          {
            "node": "Register Task Webhook - Apify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Register Task Webhook - Apify": {
      "main": [
        [
          {
            "node": "Check Realtime Usage > Apify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start Task Run - Apify": {
      "main": [
        [
          {
            "node": "Update status - AT Apollo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Apify Error 402 - IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Task Suffix - Util": {
      "main": [
        [
          {
            "node": "Create Actor Task - Apify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Task ID and Auth Header - Set": {
      "main": [
        [
          {
            "node": "Generate Idempotency Key - Util",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apify - Get limits": {
      "main": [
        [
          {
            "node": "Check Apify Capacity - IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apify - Get task": {
      "main": [
        [
          {
            "node": "Apify - Get limits",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Apify Capacity - IF": {
      "main": [
        [
          {
            "node": "Start Task Run - Apify",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Run Apify Task - AT Apify Run",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Realtime Usage > Apify": {
      "main": [
        [
          {
            "node": "Apify - Get task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apify Error 402 - IF": {
      "main": [
        [
          {
            "node": "Create Run Apify Task - AT Apify Run_2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Config": {
      "main": [
        [
          {
            "node": "Set Variables",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Variables": {
      "main": [
        [
          {
            "node": "Check Prospecting URL Present - IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vault": {
      "main": [
        [
          {
            "node": "Get Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-25T15:24:45.951Z",
  "id": "bKwOzL4eGWz27i6z",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Triggers  > Apify > Apollo Create a Task",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e764c493-3b96-4b0b-abb4-18b3dade45d8",
              "name": "actId",
              "value": "jljBwyyQakqrL1wae",
              "type": "string"
            },
            {
              "id": "9bb6b181-b2b9-4e0f-991c-59d7819d49cf",
              "name": "total_records",
              "value": "={{ $json.body.total_records }}",
              "type": "number"
            },
            {
              "id": "174d0a57-7aa5-4e8b-a951-f2940513f45f",
              "name": "prospecting_url",
              "value": "={{ $json.body.prospecting_url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3264,
        -368
      ],
      "id": "1b1d96f8-b54a-4ad7-b6e5-95f55e40d191",
      "name": "Variables - Set"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/apollo/get-leads",
        "authentication": "headerAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3488,
        -368
      ],
      "id": "cf480a9f-1d97-4df5-b3c8-9787f9710c47",
      "name": "Receive Apollo Lead Request - HTTP",
      "webhookId": "c3627432-c26e-4633-bb46-0f3f37f7b0f4",
      "notesInFlow": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "6gVvkFZGh8dqIc8X",
          "name": "Auth_Post_Webhook_N8N"
        }
      },
      "notes": "PHASE: Input. Purpose: Receive HTTP webhook to initiate an Apollo lead scrape by record ID and parameters. Inputs: JSON body fields recId, totalRecords, optional prospectingUrl; headers and query params optional. Outputs: One item forwarding the request fields downstream. Dependencies: n8n webhook endpoint at /apollo/get-leads. Special Cases: Validate recId presence, avoid logging PII, return 400 on malformed input, and consider rate limiting."
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ac2d8168-9cfd-4e1a-a249-05040835c3fa",
              "leftValue": "={{ $('Variables - Set').first().json.prospecting_url }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "9b9ce1fd-00fb-4919-bfec-cae41dcb24a0",
              "leftValue": "={{ $('Variables - Set').first().json.prospecting_url }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2368,
        -368
      ],
      "id": "65d163d5-6985-4add-b560-4d1f818d39fe",
      "name": "Check Prospecting URL Present - IF",
      "notes": "PHASE: Configuration | Purpose: Branch execution based on whether prospecting_url is present and non-empty on the current item. | Inputs: Item from prior Set step populated from the webhook with prospecting_url. | Outputs: True branch when prospecting_url exists and notEmpty; False branch routes to the error handler. | Dependencies: Output of 'Variables - Set'. | Special Cases: Normalize/trim value; update rules if upstream schema or field name changes."
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apify.com/v2/actor-tasks",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Vault').item.json.APIFY_TOKENS }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"actId\": \"{{ $('Variables - Set').first().json.actId }}\",\n  \"name\": \"{{ $json.unique_name }}-{{ DateTime.now().toFormat('yyyy-MM-dd-HH-mm') }}\",\n  \"options\": {\n    \"build\": \"latest\",\n    \"timeoutSecs\": 10000,\n    \"memoryMbytes\": 512\n  },\n  \"input\": {\n    \"cleanOutput\": false,\n    \"fileName\": \"Apollo Prospect\",\n    \"totalRecords\": {{ $('Variables - Set').first().json.total_records }},\n    \"getPersonalEmails\": true,\n    \"getWorkEmails\": true,\n    \"url\": \"{{ $('Variables - Set').first().json.prospecting_url }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1920,
        -464
      ],
      "id": "3e152c57-5639-403d-923d-d568cdd887a4",
      "name": "Create Actor Task - Apify",
      "retryOnFail": true,
      "notes": "PHASE: Utility | Purpose: Prepare task_id and Authorization header JSON template for Apify webhook registration. | Inputs: Apify response data.id and $vars.apify_webhook_bearer_token_callback. | Outputs: task_id field and payload_header string containing JSON headers. | Dependencies: Apify API response shape; n8n Variables. | Special Cases: Ensure bearer token exists and header JSON is valid; actorId and idempotencyKey are set elsewhere."
    },
    {
      "parameters": {
        "action": "generate",
        "dataPropertyName": "idempotencyKey",
        "encodingType": "hex",
        "stringLength": 8
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -1472,
        -464
      ],
      "id": "1734ea98-4ddf-4c07-b390-30e03b23603a",
      "name": "Generate Idempotency Key - Util",
      "notes": "PHASE: Utility | Purpose: Generate a hex idempotency key to avoid duplicate webhook registrations. | Inputs: None. | Outputs: idempotencyKey as 8 hex characters (~4 bytes, ~32 bits). | Dependencies: n8n Crypto node. | Special Cases: Increase length for stronger dedup guarantees; regenerate on retry when Apify returns a 409."
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apify.com/v2/webhooks",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Vault').item.json.APIFY_TOKENS }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"isAdHoc\": false,\n  \"eventTypes\": [\n    \"ACTOR.RUN.SUCCEEDED\",\n    \"ACTOR.RUN.FAILED\",\n    \"ACTOR.RUN.ABORTED\",\n    \"ACTOR.RUN.TIMED_OUT\"\n  ],\n  \"condition\": {\n    \"actorTaskId\": \"{{ $json.task_id }}\"\n  },\n  \"idempotencyKey\": \"{{ $json.idempotencyKey }}\",\n  \"ignoreSslErrors\": false,\n  \"doNotRetry\": false,\n  \"requestUrl\": \"{{ $('Set Variables').first().json.data[0]['apify_apollo_webhook_callback\t'] }}\",\n  \"payloadTemplate\": \"{}\",\n  \"headersTemplate\": \"{{ $json.payload_header }}\",\n  \"description\": \"This is webhook callback for Apollo Scraper to N8N.\",\n  \"shouldInterpolateStrings\": false\n}",
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1248,
        -464
      ],
      "id": "fbbcbe4e-3fb4-413c-b053-e29c026166fa",
      "name": "Register Task Webhook - Apify",
      "retryOnFail": true,
      "notes": "PHASE: Execution | Purpose: Register a lifecycle webhook for the Apify task. | Inputs: task_id to bind, idempotencyKey for dedup, requestUrl from $vars.apify_apollo_webhook_callback, and headersTemplate from payload_header. | Outputs: Webhook registration metadata from Apify. | Dependencies: Apify API v2 /webhooks. | Special Cases: Ensure headersTemplate is valid JSON and handle 409 conflicts/retries."
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.apify.com/v2/actor-tasks/{{ $('Prepare Task ID and Auth Header - Set').item.json.task_id }}/runs",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Vault').item.json.APIFY_TOKENS }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -128,
        -560
      ],
      "id": "0ac41ba2-810b-4280-830a-9a05453e7d67",
      "name": "Start Task Run - Apify",
      "retryOnFail": false,
      "onError": "continueErrorOutput",
      "notes": "PHASE: Execution | Purpose: Start an Apify task run for the created task. | Inputs: task_id and Apify Bearer auth. | Outputs: Run metadata including run ID and status. | Dependencies: Apify API v2 /actor-tasks/{taskId}/runs. | Special Cases: Asynchronous start; handle pending states, retries, and timeouts."
    },
    {
      "parameters": {
        "errorMessage": "No Prospecting Url"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -2144,
        -272
      ],
      "id": "4fe2f2f6-e69e-4a6d-a825-a164da91285b",
      "name": "Handle Missing Prospecting URL - Error",
      "notes": "PHASE: Error Handling | Purpose: Stop execution and raise an error when prospecting_url validation fails. | Inputs: Items from IF false branch (missing/empty prospecting_url). | Outputs: Error with message 'No Prospecting Url'. | Dependencies: n8n error handling and webhook response behavior. | Special Cases: Return 400 to caller to indicate invalid input."
    },
    {
      "parameters": {
        "action": "generate",
        "dataPropertyName": "unique_name",
        "encodingType": "hex",
        "stringLength": 10
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -2144,
        -464
      ],
      "id": "f1b4576a-8faa-4cc1-82e6-26048dac6f6e",
      "name": "Generate Task Suffix - Util",
      "notes": "PHASE: Utility | Purpose: Generate a random hex suffix to append to the Apify task name for uniqueness. | Inputs: None. | Outputs: unique_name as 10 hex characters (~5 bytes, ~40 bits). | Dependencies: n8n Crypto node. | Special Cases: Increase length for stronger uniqueness; regenerate on retries if a name collision occurs."
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a222e988-efad-4f98-b868-eedd998eb466",
              "name": "payload_header",
              "value": "={\\n  \\\"Authorization\\\": \\\"Bearer {{ $('Set Variables').first().json.data[0].apify_webhook_bearer_token_callback }}\\\"\\n}",
              "type": "string"
            },
            {
              "id": "fd4ccf41-fad8-4e16-afdd-49122350eabd",
              "name": "task_id",
              "value": "={{ $json.data.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1696,
        -464
      ],
      "id": "73812d02-0c3a-4f05-a6db-675cc2d88cf0",
      "name": "Prepare Task ID and Auth Header - Set",
      "notes": "PHASE: Utility. Purpose: Prepare actorId, taskId, and the Authorization header template for Apify webhooks. Inputs: data.id and data.actId from the create-task response, idempotencyKey from crypto, and n8n_config.bearer_token_webhook. Outputs: actorId, taskId, idempotencyKey, payload_header stringified JSON. Dependencies: Apify response schema and configuration record. Special Cases: Guard against missing bearer token and ensure JSON formatting."
    },
    {
      "parameters": {
        "url": "=https://api.apify.com/v2/users/me/limits",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Vault').item.json.APIFY_TOKENS }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -576,
        -464
      ],
      "id": "c1add31c-1dfd-47ca-9ab0-3a44e9fe54a1",
      "name": "Apify - Get limits",
      "retryOnFail": true,
      "notes": "PHASE: Execution | Purpose: Start an Apify task run for the created task. | Inputs: task_id and Apify Bearer auth. | Outputs: Run metadata including run ID and status. | Dependencies: Apify API v2 /actor-tasks/{taskId}/runs. | Special Cases: Asynchronous start; handle pending states, retries, and timeouts."
    },
    {
      "parameters": {
        "url": "=https://api.apify.com/v2/actor-tasks/{{ $('Create Actor Task - Apify').item.json.data.id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Vault').item.json.APIFY_TOKENS }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -800,
        -464
      ],
      "id": "02e32e80-979e-46c8-abb8-63900a85ad25",
      "name": "Apify - Get task",
      "retryOnFail": true,
      "notes": "PHASE: Execution | Purpose: Start an Apify task run for the created task. | Inputs: task_id and Apify Bearer auth. | Outputs: Run metadata including run ID and status. | Dependencies: Apify API v2 /actor-tasks/{taskId}/runs. | Special Cases: Asynchronous start; handle pending states, retries, and timeouts."
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2f4064fa-089d-4c2e-91e8-f5d206f5e92c",
              "leftValue": "={{ $json.data.limits.maxConcurrentActorJobs }}",
              "rightValue": "={{ $json.data.current.activeActorJobCount }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            },
            {
              "id": "18405df6-a422-4129-8fd0-818ecb853b18",
              "leftValue": "={{ $json.data.limits.maxActorMemoryGbytes }}",
              "rightValue": "={{ Math.ceil($json.data.current.actorMemoryGbytes + ($('Apify - Get task').item.json.data.options.memoryMbytes / 1000)) }}",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -352,
        -464
      ],
      "id": "7963f744-a8df-4808-a615-6aaa9486fb64",
      "name": "Check Apify Capacity - IF"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1024,
        -464
      ],
      "id": "e0bc5f10-7bb5-4721-8441-80d06be64926",
      "name": "Check Realtime Usage > Apify"
    },
    {
      "parameters": {
        "errorMessage": "={{ $json.error }}"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        320,
        -368
      ],
      "id": "54f04be2-3bf0-4266-9ca0-3e5d33f67a83",
      "name": "Stop and Error"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "52ecb72f-3a3e-429a-9a1c-def4089c2afc",
              "leftValue": "={{ $json.error.status }}",
              "rightValue": 402,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        96,
        -464
      ],
      "id": "b587fddf-a7c9-46be-9c3c-ddbfd3b039d8",
      "name": "Apify Error 402 - IF"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -2592,
        -368
      ],
      "id": "213b39ee-1589-4cac-a213-9698241f1470",
      "name": "Set Variables"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "oSwgKHI5ETDqWKLL",
          "mode": "list",
          "cachedResultName": "Variables"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -2816,
        -368
      ],
      "id": "00cc3547-f7b8-4a36-8a79-c2987caef86b",
      "name": "Get Config"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "S5knCtBpBpMCDTNI",
          "mode": "list",
          "cachedResultName": "Vault"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -3040,
        -368
      ],
      "id": "0837e9cc-558c-4eae-a9cf-636b4bd3803c",
      "name": "Vault"
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "=https://api.airtable.com/v0/{{ $('Vault').item.json.BASE_ID }}/Apollo/{{ $('Receive Apollo Lead Request - HTTP').first().json.body.recId }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Vault').item.json.AIRTABLE_PERSONAL_ACCESS_TOKEN }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"fields\": {\n    \"executionDate\": \"{{ $now }}\",\n    \"status\": \"In progress\",\n    \"statusDetails\": \"👉 We’re retrieving your contacts in the background. Please wait a few minutes until the process is complete.\",\n    \"actorRunId\": \"{{ $json.data.id }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        96,
        -656
      ],
      "id": "7ed14458-6bce-44a8-ba68-6b8d6a4f7b54",
      "name": "Update status - AT Apollo",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.airtable.com/v0/{{ $('Vault').item.json.BASE_ID }}/Apify%20Runs",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Vault').item.json.AIRTABLE_PERSONAL_ACCESS_TOKEN }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"records\": [\n    {\n      \"fields\": {\n        \"taskId\": \"{{ $('Create Actor Task - Apify').item.json.data.id }}\",\n        \"maxConcurrentActorJobs\": {{ $json.data.limits.maxConcurrentActorJobs }},\n        \"maxActorMemoryGbytes\": {{ $json.data.limits.maxActorMemoryGbytes }},\n        \"activeActorJobCount\": {{ $json.data.current.activeActorJobCount }},\n        \"actorMemoryGbytes\": {{ $json.data.current.actorMemoryGbytes }},\n        \"requestedMemoryMbytes\": {{ Math.ceil($json.data.current.actorMemoryGbytes + ($('Apify - Get task').item.json.data.options.memoryMbytes / 1000)) }}\n      }\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -128,
        -368
      ],
      "id": "bad881d6-e0e7-456d-b66d-19d509ee9536",
      "name": "Create Run Apify Task - AT Apify Run"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.airtable.com/v0/{{ $('Vault').item.json.BASE_ID }}/Apify%20Runs",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Vault').item.json.AIRTABLE_PERSONAL_ACCESS_TOKEN }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"records\": [\n    {\n      \"fields\": {\n        \"taskId\": \"{{ $('Create Actor Task - Apify').item.json.data.id }}\",\n        \"maxConcurrentActorJobs\": {{ $json.data.limits.maxConcurrentActorJobs }},\n        \"maxActorMemoryGbytes\": {{ $json.data.limits.maxActorMemoryGbytes }},\n        \"activeActorJobCount\": {{ $json.data.current.activeActorJobCount }},\n        \"actorMemoryGbytes\": {{ $json.data.current.actorMemoryGbytes }},\n        \"requestedMemoryMbytes\": {{ Math.ceil($json.data.current.actorMemoryGbytes + ($('Apify - Get task').item.json.data.options.memoryMbytes / 1000)) }}\n      }\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        320,
        -560
      ],
      "id": "fce67faf-57a6-40a0-a1e5-4fde9d076805",
      "name": "Create Run Apify Task - AT Apify Run_2"
    }
  ],
  "repo_name": "boost-prospect-v2",
  "repo_owner": "ultimvision",
  "repo_path": "workflows",
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "xqIMv4nOqM7qzjDi"
  },
  "shared": [
    {
      "createdAt": "2025-08-25T15:24:45.951Z",
      "updatedAt": "2025-08-25T15:24:45.951Z",
      "role": "workflow:owner",
      "workflowId": "bKwOzL4eGWz27i6z",
      "projectId": "zxVtQj8AiJx7hlkL"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-08-28T20:14:40.063Z",
      "updatedAt": "2025-08-28T20:14:40.063Z",
      "id": "NRTwpUm4iq5jfqQG",
      "name": "Migrated"
    },
    {
      "createdAt": "2025-08-25T15:32:46.509Z",
      "updatedAt": "2025-08-25T15:32:46.509Z",
      "id": "4ptvvLb7NgD8g7Ar",
      "name": "Apify"
    },
    {
      "createdAt": "2025-08-25T15:32:43.780Z",
      "updatedAt": "2025-08-25T15:32:43.780Z",
      "id": "iG6zhvDmNAekSWMV",
      "name": "Webhook"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-08-28T20:14:59.919Z",
  "versionId": "18a7251e-a7b3-423f-bc1b-b275a840d23f"
}