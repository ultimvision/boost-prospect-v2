{
  "active": false,
  "connections": {
    "Chat Model - OpenRouter": {
      "ai_languageModel": [
        [
          {
            "node": "Summarize Previous Jobs - LLM",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If Summary Text Present - IF": {
      "main": [
        [
          {
            "node": "Update Previous Job Summary - AT People",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Retry Count LT 2 - IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Retry Count LT 2 - IF": {
      "main": [
        [
          {
            "node": "Summarize Previous Jobs - LLM",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fail Job Summary Generation - Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Model (Fallback)": {
      "ai_languageModel": [
        [
          {
            "node": "Summarize Previous Jobs - LLM",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "Summarize Previous Jobs - LLM": {
      "main": [
        [
          {
            "node": "If Summary Text Present - IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Workflow Data": {
      "main": [
        [
          {
            "node": "Summarize Previous Jobs - LLM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-25T15:27:33.299Z",
  "id": "ryt8qeooM03Js2tx",
  "isArchived": true,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[2010] Sub > LinkedIn > Summarize Previous Jobs > Apify",
  "nodes": [
    {
      "parameters": {
        "model": "=google/gemini-2.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1856,
        896
      ],
      "id": "d12c7643-e0c1-4a11-8392-f4e325848d00",
      "name": "Chat Model - OpenRouter",
      "credentials": {
        "openRouterApi": {
          "id": "0qavXgV1FZOxQIaU",
          "name": "OpenRouter"
        }
      },
      "notes": "PHASE: Configuration Purpose: Provide the OpenRouter Gemini 2.5 Flash chat model handle for the summarization chain. Inputs: OpenRouter API credentials only, no item data consumed. Outputs: Language model instance passed to the LLM chain. Dependencies: OpenRouter Boost Performance credentials and LangChain LLM nodes. Special Cases: Subject to OpenRouter rate limits/quotas; change model here to alter behavior."
    },
    {
      "parameters": {
        "errorType": "errorObject",
        "errorObject": "={{ JSON.stringify($json) }}"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2640,
        768
      ],
      "id": "21f0b88d-97ef-4fcc-a869-5ba486ea9e5b",
      "name": "Fail Job Summary Generation - Error Handler",
      "notes": "PHASE: Error Handling Purpose: Fail the run when job summary generation has exceeded retries or produced invalid/empty output. Inputs: Current item ($json) and $runIndex for context. Outputs: Throws an error object to halt execution. Dependencies: Built-in error handling only. Special Cases: Serializes the current item into errorObject; used on the false branch of retry guard."
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "def6644c-7b30-4c64-97cb-70dce510f2a1",
              "leftValue": "={{ $json.text }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "389e619d-3986-49ea-93dc-ecae24324c50",
              "leftValue": "={{ $json.text }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2192,
        592
      ],
      "id": "9d356fae-0363-4b85-b48a-34ed5d088d05",
      "name": "If Summary Text Present - IF",
      "notes": "PHASE: Execution Purpose: Guard that the LLM output contains a non-empty text summary before updating Airtable. Inputs: Item from LLM chain containing potential 'text' property. Outputs: True branch when $json.text exists and notEmpty; false branch when missing or empty. Dependencies: LLM chain output shape. Special Cases: Strict type validation and caseSensitive checks enabled."
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "06b508ed-51fa-4bc9-960c-f8f86b9d3273",
              "leftValue": "={{ $runIndex }}",
              "rightValue": 2,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2416,
        768
      ],
      "id": "da85eabf-7d15-47d7-8ec3-56071ca13d94",
      "name": "If Retry Count LT 2 - IF",
      "notes": "PHASE: Execution Purpose: Gate retries so the LLM is called again only when $runIndex is less than 2; otherwise route to failure. Inputs: Implicit $runIndex. Outputs: True branch to LLM retry; false branch to error handler. Dependencies: LLM chain node and Stop/Error node. Special Cases: Adjust threshold to change retry policy."
    },
    {
      "parameters": {
        "model": "=openai/gpt-4.1-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1984,
        896
      ],
      "id": "5675f03a-70cc-4c2f-9aec-e49108830be7",
      "name": "Chat Model (Fallback)",
      "credentials": {
        "openRouterApi": {
          "id": "0qavXgV1FZOxQIaU",
          "name": "OpenRouter"
        }
      },
      "notes": "PHASE: Configuration Purpose: Provide a fallback OpenRouter chat model used by the LLM chain if the primary model fails. Inputs: OpenRouter API credentials. Outputs: Fallback model handle to the chain. Dependencies: OpenRouter Boost Performance credentials; LangChain LLM nodes. Special Cases: Select a concrete model here to guarantee deterministic behavior."
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=###Fullname of the person :\n{{ $json.fullName }}\n\n###Job Title :\n{{ $json.jobTitle }}\n\n###Company :\n{{ $json.companyName[0] }}\n\n###Previous Jobs :\n```json\n{{ $json.previousJobs }}\n",
        "needsFallback": true,
        "messages": {
          "messageValues": [
            {
              "message": "=**Role:**\nYou are an intelligent assistant specialized in creating professional narrative summaries from raw data, with the goal of enriching a CRM and better understanding a person’s profile.\n\n**Action:**\nAnalyze raw JSON work-history data and produce a smooth, natural one-paragraph summary.\n\n**Context:**\nThe JSON contains a person’s employment history in reverse-chronological order, including job titles, organizations, dates, and responsibilities or achievements.\n\n**Requirements:**\n\n* For each position (most recent first), include:\n\n  1. Job title\n  2. Organization (if provided)\n  3. Start and end dates (or “Present” if ongoing)\n  4. Key responsibilities or achievements (if provided)\n* Write in concise, polished **{{ $json.config.variable.default_llm_output_language }}** language, in no more than one paragraph.\n* Use a tone that conveys the person’s career trajectory, areas of expertise, and level of experience.\n* Conclude with a brief sentence summarizing the progression or breadth of experience, useful for CRM qualification.\n* Do not invent missing details; use neutral phrasing instead.\n"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1840,
        672
      ],
      "id": "c6d80275-90c1-4119-9129-0259b2a4a60b",
      "name": "Summarize Previous Jobs - LLM",
      "retryOnFail": true,
      "notes": "PHASE: Execution Purpose: Use the LLM to produce a one-paragraph professional summary of prior roles for CRM enrichment. Inputs: fullName, jobTitle, companyName (string), previousJobs (JSON string), and $vars.default_llm_output_language. Outputs: text field with the summary. Dependencies: OpenRouter model nodes and LangChain chain. Special Cases: Avoid indexing companyName; ensure previousJobs is valid JSON; fallback requires a second model input."
    },
    {
      "parameters": {
        "content": "# Prior Roles Summary Generation – Subflow\n\n1. This sub-workflow generates a concise professional summary of a person's prior roles and writes it back to Airtable.\n\n2. It receives person context (**name**, **title**, **company**) plus a **work-history payload** and an **Airtable record ID**.\n\n3. The workflow calls an **OpenRouter-backed LLM** (with an optional fallback model) via a **LangChain chain** to produce a one-paragraph summary.\n\n4. It guards for a non-empty LLM `text` output, retries once based on run index, and fails fast if the output remains invalid.\n\n5. On success, it updates the `previousJobSummary` field in the **Airtable People** table.\n\n---\n\n### 🔗 Key Integrations\n- **OpenRouter** (LLM with fallback)  \n- **LangChain** (LLM orchestration)  \n- **Airtable API** (People table)\n",
        "height": 576,
        "width": 704
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        528,
        544
      ],
      "id": "573281d3-6ee0-4156-bc8b-7f5da22a24b0",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": []
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1616,
        672
      ],
      "id": "8b2a945b-68d3-469d-8038-790aec0cb6fd",
      "name": "Workflow Data"
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "=https://api.airtable.com/v0/{{ $('Workflow Data').first().json.config.vault.BASE_ID }}/People/{{ $('Workflow Data').first().json.recId }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Workflow Data').first().json.config.vault.AIRTABLE_PERSONAL_ACCESS_TOKEN }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"fields\": {\n    \"previousJobSummary\": {{ JSON.stringify($json.text) }}\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2416,
        544
      ],
      "id": "5e1b3e96-d802-4139-ac38-3c2e963d28b0",
      "name": "Update Previous Job Summary - AT People",
      "retryOnFail": true
    }
  ],
  "repo_name": "boost-prospect-v2",
  "repo_owner": "ultimvision",
  "repo_path": "workflows",
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "xqIMv4nOqM7qzjDi"
  },
  "shared": [
    {
      "createdAt": "2025-08-25T15:27:33.299Z",
      "updatedAt": "2025-08-25T15:27:33.299Z",
      "role": "workflow:owner",
      "workflowId": "ryt8qeooM03Js2tx",
      "projectId": "zxVtQj8AiJx7hlkL"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-09-05T11:43:12.743Z",
      "updatedAt": "2025-09-05T11:43:12.743Z",
      "id": "2WGDY3428pMfpzn6",
      "name": "Boost Prospect"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-09-07T13:55:46.752Z",
  "versionId": "ac470d18-0539-4a2f-9c1d-9609607f482a"
}