{
  "active": false,
  "connections": {
    "Get Webhook Dispatch - HTTP Apify": {
      "main": [
        [
          {
            "node": "Get Actor Run Details - Apify Apollo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Actor Run Details - Apify Apollo": {
      "main": [
        [
          {
            "node": "If Run SUCCEEDED - IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Run SUCCEEDED - IF": {
      "main": [
        [
          {
            "node": "Get Workflow Id - [2710:sub]",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fail Run - Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Next Page - IF": {
      "main": [
        [
          {
            "node": "Recurse Dataset Pagination - Subflow",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Workflow Data": {
      "main": [
        [
          {
            "node": "Get Webhook Dispatch - HTTP Apify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Archived": {
      "main": [
        [
          {
            "node": "Recurse Dataset Pagination - Subflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recurse Dataset Pagination - Subflow": {
      "main": [
        []
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "Workflow Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Workflow Id - [2710:sub]": {
      "main": [
        [
          {
            "node": "Filter Archived",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-26T18:43:59.303Z",
  "id": "dvNGxjHgYEaIRXCj",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[2710] Apify > Webhook Callback > Facebook Groups Scraping",
  "nodes": [
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1936,
        -1680
      ],
      "id": "d84e8972-aeb0-4651-8bf2-31cb927caa29",
      "name": "Start"
    },
    {
      "parameters": {
        "url": "=https://api.apify.com/v2/webhook-dispatches/{{ $json['x-apify-webhook-dispatch-id'] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Workflow Data').item.json.config.vault.APIFY_TOKENS }}"
            },
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1488,
        -1680
      ],
      "id": "9ef94ac6-fe53-4c23-969d-8da4154e9117",
      "name": "Get Webhook Dispatch - HTTP Apify",
      "notes": "PHASE: Execution Purpose: Retrieve the Apify webhook dispatch to extract actorRunId and metadata for this callback. Inputs: Header x-apify-webhook-dispatch-id from Webhook; Apify Bearer credential. Outputs: JSON dispatch including data.eventData.actorRunId and metadata. Dependencies: Webhook - Apify Callback - Apollo; Apify HTTP API; Bearer Apify credential. Special Cases: 401/403 for auth errors; 429 for rate limits; no retry configured."
    },
    {
      "parameters": {
        "url": "=https://api.apify.com/v2/actor-runs/{{ $('Get Webhook Dispatch - HTTP Apify').item.json.data.eventData.actorRunId }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Workflow Data').item.json.config.vault.APIFY_TOKENS }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1264,
        -1680
      ],
      "id": "5f9a3c45-8be2-488b-8b4c-64a5724e40c7",
      "name": "Get Actor Run Details - Apify Apollo",
      "retryOnFail": true,
      "maxTries": 2,
      "notes": "PHASE: Execution Purpose: Fetch Apify actor run details to determine completion status and get the dataset id. Inputs: actorRunId from Get Webhook Dispatch. Outputs: JSON with data.status and data.defaultDatasetId. Dependencies: Apify HTTP API; Bearer Apify credential. Special Cases: Status may be SUCCEEDED/FAILED/TIMED-OUT; gate downstream actions accordingly."
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e09c97a6-ae38-43d5-a296-5a5f501d454c",
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "SUCCEEDED",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1040,
        -1680
      ],
      "id": "f1466880-9ecb-4dd2-8a0e-a6333dc4a7eb",
      "name": "If Run SUCCEEDED - IF",
      "notes": "PHASE: Execution Purpose: Branch based on Apify actor run status being SUCCEEDED. Inputs: data.status from Get Actor Run Details. Outputs: True path triggers pagination; false path goes to Stop with Error. Dependencies: Get Actor Run Details. Special Cases: Non-SUCCEEDED statuses are treated as failures."
    },
    {
      "parameters": {
        "errorMessage": "Apollo Run Status Error"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -816,
        -1584
      ],
      "id": "4c50c76a-9809-4c74-a583-094b0c3a06d5",
      "name": "Fail Run - Error Handler",
      "notes": "PHASE: Error Handling Purpose: Fail the workflow when the Apify actor run did not succeed. Inputs: False branch from If Run SUCCEEDED. Outputs: Error thrown with message 'Apollo Run Status Error'. Dependencies: If Run SUCCEEDED - IF. Special Cases: Stops all downstream processing."
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a131219e-371c-47b6-858d-c86d3c0d5c70",
              "leftValue": "={{ $json.get_next_page }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -144,
        -1776
      ],
      "id": "8dbd95a9-61a5-4e73-a30d-2f7542b16394",
      "name": "If Next Page - IF",
      "notes": "PHASE: Execution Purpose: Branch based on get_next_page to control recursion. Inputs: Boolean get_next_page from Set nodes. Outputs: True path executes next page; false path stops. Dependencies: Set Next Page Flag True/False; Recurse Dataset Pagination - Subflow. Special Cases: Always set flag to avoid infinite loops."
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "=https://api.airtable.com/v0/{{ $('Workflow Data').item.json.config.vault.BASE_ID }}/Apollo/{{ $('Search recId by actorRunId - AT Apollo').item.json.records[0].id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Workflow Data').item.json.config.vault.AIRTABLE_PERSONAL_ACCESS_TOKEN }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"fields\": {\n    \"executionDate\": \"{{ $now }}\",\n    \"status\": \"Successfully Completed\",\n    \"statusDetails\": \"ðŸš€ All done! Your task was completed successfully.\",\n    \"executed\": true\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        80,
        -1776
      ],
      "id": "dbebe93c-9323-47da-adb6-875ddb30f58b",
      "name": "Update status - AT Apollo",
      "retryOnFail": true
    },
    {
      "parameters": {
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1712,
        -1680
      ],
      "id": "44863e4f-e71a-45f4-9b25-d1e2206ef328",
      "name": "Workflow Data"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e9ae0251-3cbe-43d9-a0cf-f9c189bb3084",
              "leftValue": "={{ $json.isArchived }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -592,
        -1776
      ],
      "id": "dc6d526a-df48-494d-85ac-ebba885a2a09",
      "name": "Filter Archived"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "={{ $('Get Workflow Id - [2710:sub]').first().json.id }}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "offset": "={{ $runIndex * 100 }}",
            "dataset": "={{ $('Get Actor Run Details - Apify Apollo').first().json.data.defaultDatasetId }}",
            "config": "={{ $('Workflow Data').item.json.config }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "dataset",
              "displayName": "dataset",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "offset",
              "displayName": "offset",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            },
            {
              "id": "config",
              "displayName": "config",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -368,
        -1776
      ],
      "id": "f13fd6a9-b9d3-4555-bc10-14af9cc3683a",
      "name": "Recurse Dataset Pagination - Subflow",
      "notes": "PHASE: Execution Purpose: Self-execute the workflow to fetch the next dataset page. Inputs: dataset id and offset (runIndex*100). Outputs: Invokes subflow run for next page processing. Dependencies: Execute Workflow Trigger; If Next Page - IF. Special Cases: Must stop when get_next_page=false to prevent infinite loop."
    },
    {
      "parameters": {
        "returnAll": false,
        "limit": 1,
        "filters": {
          "activeWorkflows": false,
          "name": "[2710:sub]",
          "excludePinnedData": true
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        -816,
        -1776
      ],
      "id": "3de4b687-dffe-4d28-b32b-a50c1364fdd4",
      "name": "Get Workflow Id - [2710:sub]",
      "credentials": {
        "n8nApi": {
          "id": "DeDKPUGV1gyQwspX",
          "name": "n8n local"
        }
      }
    }
  ],
  "repo_name": "boost-prospect-v2",
  "repo_owner": "ultimvision",
  "repo_path": "workflows",
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "xqIMv4nOqM7qzjDi"
  },
  "shared": [
    {
      "createdAt": "2025-08-26T18:43:59.303Z",
      "updatedAt": "2025-08-26T18:43:59.303Z",
      "role": "workflow:owner",
      "workflowId": "dvNGxjHgYEaIRXCj",
      "projectId": "zxVtQj8AiJx7hlkL"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-09-05T11:43:12.743Z",
      "updatedAt": "2025-09-05T11:43:12.743Z",
      "id": "2WGDY3428pMfpzn6",
      "name": "Boost Prospect"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-09-05T12:30:14.305Z",
  "versionId": "89a427a2-12d1-43e1-b11e-ddf512c6629e"
}