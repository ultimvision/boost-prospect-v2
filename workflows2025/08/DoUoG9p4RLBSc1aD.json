{
  "active": false,
  "connections": {
    "Get Webhook Dispatch - HTTP Apify": {
      "main": [
        [
          {
            "node": "Search recId by actorRunId - AT Apollo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Actor Run Details - Apify Apollo": {
      "main": [
        [
          {
            "node": "If Run SUCCEEDED - IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Run SUCCEEDED - IF": {
      "main": [
        [
          {
            "node": "Get Workflow Id - [1010:sub]",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fail Run - Error Handler",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Next Page - IF": {
      "main": [
        [
          {
            "node": "Recurse Dataset Pagination - Subflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update status - AT Apollo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Receive Callback - Webhook Apify Apollo": {
      "main": [
        [
          {
            "node": "Workflow Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Workflow Data": {
      "main": [
        [
          {
            "node": "Get Webhook Dispatch - HTTP Apify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search recId by actorRunId - AT Apollo": {
      "main": [
        [
          {
            "node": "Get Actor Run Details - Apify Apollo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Workflow Id - [1010:sub]": {
      "main": [
        [
          {
            "node": "Filter Archived",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Archived": {
      "main": [
        [
          {
            "node": "Recurse Dataset Pagination - Subflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recurse Dataset Pagination - Subflow": {
      "main": [
        [
          {
            "node": "If Next Page - IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-25T15:25:57.471Z",
  "id": "DoUoG9p4RLBSc1aD",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[1010] Apify > Webhook Callback > Apollo",
  "nodes": [
    {
      "parameters": {
        "content": "# Apify Apollo Actor Callback Processing â€“ Workflow\n\n1. This workflow processes **Apify callbacks** for Apollo actor runs and syncs the resulting company and person data into Airtable.\n\n2. On an **authenticated webhook hit**, it looks up the **Apify webhook dispatch**, fetches the related **actor run**, and proceeds only if the run succeeded.\n\n3. The workflow paginates through the actorâ€™s **output dataset** (100 items per page) and processes items in **25-item batches** to upsert **Companies** and **People** into the **Boost Prospects Airtable** base.\n\n4. The flow loops through dataset pages via a **self-invoked subflow** until an empty page is encountered, then stops.\n\n5. Failures (non-`SUCCEEDED` runs) **short-circuit with an error**.\n\n---\n\n### ðŸ”— Key Integrations\n- **Apify REST API** (webhook dispatch, actor run, dataset items)  \n- **Airtable API** (Companies and People tables)\n",
        "height": 608,
        "width": 992
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2368,
        -672
      ],
      "id": "63e067b9-0529-46c9-bfd0-b35c2eaa360f",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "url": "=https://api.apify.com/v2/webhook-dispatches/{{ $json['x-apify-webhook-dispatch-id'] }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Workflow Data').item.json.config.vault.APIFY_TOKENS }}"
            },
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -800,
        -432
      ],
      "id": "367ee02b-6ba5-4582-87a9-60a6c4853e37",
      "name": "Get Webhook Dispatch - HTTP Apify",
      "notes": "PHASE: Execution Purpose: Retrieve the Apify webhook dispatch to extract actorRunId and metadata for this callback. Inputs: Header x-apify-webhook-dispatch-id from Webhook; Apify Bearer credential. Outputs: JSON dispatch including data.eventData.actorRunId and metadata. Dependencies: Webhook - Apify Callback - Apollo; Apify HTTP API; Bearer Apify credential. Special Cases: 401/403 for auth errors; 429 for rate limits; no retry configured."
    },
    {
      "parameters": {
        "url": "=https://api.apify.com/v2/actor-runs/{{ $('Get Webhook Dispatch - HTTP Apify').item.json.data.eventData.actorRunId }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Workflow Data').item.json.config.vault.APIFY_TOKENS }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -352,
        -432
      ],
      "id": "66e6d1d2-f97e-48f3-8e4e-01786c67be07",
      "name": "Get Actor Run Details - Apify Apollo",
      "retryOnFail": true,
      "maxTries": 2,
      "notes": "PHASE: Execution Purpose: Fetch Apify actor run details to determine completion status and get the dataset id. Inputs: actorRunId from Get Webhook Dispatch. Outputs: JSON with data.status and data.defaultDatasetId. Dependencies: Apify HTTP API; Bearer Apify credential. Special Cases: Status may be SUCCEEDED/FAILED/TIMED-OUT; gate downstream actions accordingly."
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e09c97a6-ae38-43d5-a296-5a5f501d454c",
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "SUCCEEDED",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -128,
        -432
      ],
      "id": "d6478073-1990-4d44-bbff-89723a825187",
      "name": "If Run SUCCEEDED - IF",
      "notes": "PHASE: Execution Purpose: Branch based on Apify actor run status being SUCCEEDED. Inputs: data.status from Get Actor Run Details. Outputs: True path triggers pagination; false path goes to Stop with Error. Dependencies: Get Actor Run Details. Special Cases: Non-SUCCEEDED statuses are treated as failures."
    },
    {
      "parameters": {
        "errorMessage": "Apollo Run Status Error"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        96,
        -336
      ],
      "id": "b7b25d13-0538-4771-92c9-ec33121b1023",
      "name": "Fail Run - Error Handler",
      "notes": "PHASE: Error Handling Purpose: Fail the workflow when the Apify actor run did not succeed. Inputs: False branch from If Run SUCCEEDED. Outputs: Error thrown with message 'Apollo Run Status Error'. Dependencies: If Run SUCCEEDED - IF. Special Cases: Stops all downstream processing."
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a131219e-371c-47b6-858d-c86d3c0d5c70",
              "leftValue": "={{ $json.get_next_page }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        768,
        -528
      ],
      "id": "e5bc0070-4842-4941-a48d-0e890060053f",
      "name": "If Next Page - IF",
      "notes": "PHASE: Execution Purpose: Branch based on get_next_page to control recursion. Inputs: Boolean get_next_page from Set nodes. Outputs: True path executes next page; false path stops. Dependencies: Set Next Page Flag True/False; Recurse Dataset Pagination - Subflow. Special Cases: Always set flag to avoid infinite loops."
    },
    {
      "parameters": {
        "method": "PATCH",
        "url": "=https://api.airtable.com/v0/{{ $('Workflow Data').item.json.config.vault.BASE_ID }}/Apollo/{{ $('Search recId by actorRunId - AT Apollo').item.json.records[0].id }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Workflow Data').item.json.config.vault.AIRTABLE_PERSONAL_ACCESS_TOKEN }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"fields\": {\n    \"executionDate\": \"{{ $now }}\",\n    \"status\": \"Successfully Completed\",\n    \"statusDetails\": \"ðŸš€ All done! Your task was completed successfully.\",\n    \"executed\": true\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        992,
        -528
      ],
      "id": "50fe93b1-8346-4490-bb64-8992fe86f3dc",
      "name": "Update status - AT Apollo",
      "retryOnFail": true
    },
    {
      "parameters": {
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1024,
        -432
      ],
      "id": "dd643b93-b29c-4662-abfd-95842291b149",
      "name": "Workflow Data"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -1248,
        -432
      ],
      "id": "8dbbd7bf-7ce9-4d61-98ce-941b9d942241",
      "name": "Receive Callback - Webhook Apify Apollo"
    },
    {
      "parameters": {
        "url": "=https://api.airtable.com/v0/{{ $('Workflow Data').item.json.config.vault.BASE_ID }}/Apollo",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "filterByFormula",
              "value": "={actorRunId}=\"{{ $json.data.eventData.actorRunId }}\""
            },
            {
              "name": "maxRecords",
              "value": "1"
            },
            {
              "name": "fields[0]",
              "value": "recId"
            },
            {
              "name": "fields[1]",
              "value": "user"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Workflow Data').item.json.config.vault.AIRTABLE_PERSONAL_ACCESS_TOKEN }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -576,
        -432
      ],
      "id": "4d38e3c9-e5da-4bf9-b30a-db442fe03c03",
      "name": "Search recId by actorRunId - AT Apollo",
      "retryOnFail": true
    },
    {
      "parameters": {
        "returnAll": false,
        "limit": 1,
        "filters": {
          "activeWorkflows": false,
          "name": "[1010:sub]",
          "excludePinnedData": true
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        96,
        -528
      ],
      "id": "6cd625cb-f9e8-4f7e-834c-999fb0fddf5c",
      "name": "Get Workflow Id - [1010:sub]",
      "credentials": {
        "n8nApi": {
          "id": "DeDKPUGV1gyQwspX",
          "name": "n8n local"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e9ae0251-3cbe-43d9-a0cf-f9c189bb3084",
              "leftValue": "={{ $json.isArchived }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        288,
        -528
      ],
      "id": "4b358f5e-de5a-45e7-894d-113685413478",
      "name": "Filter Archived"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "={{ $('Get Workflow Id - [1010:sub]').first().json.id }}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "offset": "={{ $runIndex * 100 }}",
            "dataset": "={{ $('Get Actor Run Details - Apify Apollo').first().json.data.defaultDatasetId }}",
            "apolloId": "={{ $('Search recId by actorRunId - AT Apollo').first().json.records[0].id }}",
            "userId": "={{ $('Search recId by actorRunId - AT Apollo').first().json.records[0].fields.user[0] }}",
            "config": "={{ $('Workflow Data').first().json.config }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "dataset",
              "displayName": "dataset",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "offset",
              "displayName": "offset",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "apolloId",
              "displayName": "apolloId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "userId",
              "displayName": "userId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "config",
              "displayName": "config",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        544,
        -528
      ],
      "id": "3deaae86-7217-4265-b76d-0aabaa8e5e62",
      "name": "Recurse Dataset Pagination - Subflow",
      "notes": "PHASE: Execution Purpose: Self-execute the workflow to fetch the next dataset page. Inputs: dataset id and offset (runIndex*100). Outputs: Invokes subflow run for next page processing. Dependencies: Execute Workflow Trigger; If Next Page - IF. Special Cases: Must stop when get_next_page=false to prevent infinite loop."
    }
  ],
  "repo_name": "boost-prospect-v2",
  "repo_owner": "ultimvision",
  "repo_path": "workflows",
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "xqIMv4nOqM7qzjDi"
  },
  "shared": [
    {
      "createdAt": "2025-08-25T15:25:57.471Z",
      "updatedAt": "2025-08-25T15:25:57.471Z",
      "role": "workflow:owner",
      "workflowId": "DoUoG9p4RLBSc1aD",
      "projectId": "zxVtQj8AiJx7hlkL"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-09-05T11:43:12.743Z",
      "updatedAt": "2025-09-05T11:43:12.743Z",
      "id": "2WGDY3428pMfpzn6",
      "name": "Boost Prospect"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-09-05T12:03:48.930Z",
  "versionId": "3288b6b1-560a-42ce-9e8d-c2061271953e"
}